<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
		<!-- interceptor 설정 : 로그인 정보가 없으면 특정 페이지에 들어가지 못하도록 설정-->
	<beans:bean id="MemInterceptor" class="com.friendly.eco.client.interceptor.MemInterceptor">
	</beans:bean>
	<!-- interceptor 설정 -->
	<interceptors>
		<interceptor>
			<!-- 설정한 데이터가 없으면 들어가지 못하도록 설정한 경로 -->
			<mapping path="/rest/member/secces"/>
			<beans:ref bean="MemInterceptor"/>
		</interceptor>
	</interceptors>
	
	<context:component-scan base-package="com.friendly.eco.client" />
	
		<!-- 구글 로그인 관련 정보 등록  -->
 	<beans:bean id="googleLogin" class="com.friendly.eco.domain.GoogleLogin">
 		<!-- 1) 인증화면 관련 -->
 		<!-- 인증화면 링크 URL -->
 		<beans:property name="endpoint" value="https://accounts.google.com/o/oauth2/v2/auth"/>
 	
		<!-- google cloud platform에서 발급받은 client ID-->
		<beans:property name="client_id" value="1057205470580-v2gj6nj1cs6i0f2qq97d63hfrbpld892.apps.googleusercontent.com"/>
		
		<!-- google cloud platform에서 발급받은 client Secret--> 		
		<beans:property name="client_secret" value="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"/> 		
		
		<!-- Resource Owner 가 인증할때, 콜백받을 우리 웹사이트 URI -->
		<beans:property name="redirect_uri" value="http://localhost:7777/member/sns/google/callback"/>
		
		<!-- 콜백받을때, 구글이 우리에게 전달할 파라미터의 이름 -->
		<beans:property name="response_type" value="code"/>
		
		
		<!-- Resource Owner 로부터 어떠한 정보를 수집할지 그 범위설정  -->
		<beans:property name="scope" value="https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"/>
		

		<!-- 2) 토큰 요청 관련 -->
		<beans:property name="token_request_url"  value="https://oauth2.googleapis.com/token"/>
		<!-- 모든 SNS 사업자가 같은 변수명을 쓴다 -->
		<beans:property name="grant_type" value="authorization_code"/>
		
		<!--3) 회원정보 요청을 위한  url  -->
		<beans:property name="userinfo_url"  value="https://www.googleapis.com/oauth2/v1/userinfo"/>
		
 	</beans:bean>

 	
 	
 	<!-- KaKao 로그인 관련 정보 등록  -->
 	<beans:bean id="kaKaoLogin" class="com.friendly.eco.domain.KaKaoLogin">
 		<!-- 1) 인증화면 관련 -->
 		<!-- 인증화면 링크 URL -->
 		<beans:property name="endpoint" value="https://kauth.kakao.com/oauth/authorize"/>
 	
		<!-- google cloud platform에서 발급받은 client ID-->
		<beans:property name="client_id" value="727a04ad8f6cdf4192ae4baf2fd1547e"/>
		
		<!-- Resource Owner 가 인증할때, 콜백받을 우리 웹사이트 URI -->
		<beans:property name="redirect_uri" value="http://localhost:7777/sns/kakao/callback"/>
		
		<!-- 콜백받을때, 구글이 우리에게 전달할 파라미터의 이름 -->
		<beans:property name="response_type" value="code"/>

		<!-- 2) 토큰 요청 관련 -->
		<beans:property name="token_request_url"  value="https://kauth.kakao.com/oauth/token"/>
		<!-- 모든 SNS 사업자가 같은 변수명을 쓴다 -->
		<beans:property name="grant_type" value="authorization_code"/>
		
		<!--3) 회원정보 요청을 위한  url  -->
		<beans:property name="userinfo_url"  value="https://kapi.kakao.com/v2/user/me"/>
		
 	</beans:bean>
 	
 	
 	<!-- Naver 로그인 관련 정보 등록  -->
 	<beans:bean id="naverLogin" class="com.friendly.eco.domain.NaverLogin">
 		<!-- 1) 인증화면 관련 -->
 		<!-- 인증화면 링크 URL -->
 		<beans:property name="endpoint" value="https://nid.naver.com/oauth2.0/authorize"/>
 	
		<!--naver에서 발급받은 client ID , client secret-->
		<beans:property name="client_id" value="YVAIKJp0o7H33XaIKQZf"/>
		<beans:property name="client_secret" value="FGHcSH196C"/>
		
		<!-- Resource Owner 가 인증할때, 콜백받을 우리 웹사이트 URI -->
		<beans:property name="redirect_uri" value="http://localhost:7777/sns/naver/callback"/>
		
		<!-- 콜백받을때, 구글이 우리에게 전달할 파라미터의 이름 -->
		<beans:property name="response_type" value="code"/>
		<beans:property name="state" value="naver_login_by_zino"/>


		<!-- 2) 토큰 요청 관련 -->
		<beans:property name="token_request_url"  value="https://nid.naver.com/oauth2.0/token"/>
		<!-- 모든 SNS 사업자가 같은 변수명을 쓴다 -->
		<beans:property name="grant_type" value="authorization_code"/>
		
		
		<!--3) 회원정보 요청을 위한  url  -->
		<beans:property name="userinfo_url"  value="https://openapi.naver.com/v1/nid/me"/>
	</beans:bean>
	
</beans:beans>
